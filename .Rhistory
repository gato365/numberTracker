setwd("C:/Users/james/OneDrive/Documents/Important_Files/Life/01_thoughts_self")
library(shiny)
library(dplyr)
library(readxl)
setwd("C:/Users/james/OneDrive/Documents/Important_Files/Life")
number_e = read_xlsx('emans_info.xlsx', sheet = 'e')
View(number_e)
setwd("C:/Users/james/OneDrive/Documents/Important_Files/Life")
e_number_df = read_xlsx('emans_info.xlsx', sheet = 'e')
rownames(e_number_df) = e_number_df[,1];e_number_df[,-1]
e_number_df = read_xlsx('emans_info.xlsx', sheet = 'e')
row.names(e_number_df) = e_number_df[,1];e_number_df[,-1]
View(e_number_df)
e_number_df = read_xlsx('emans_info.xlsx', sheet = 'e') %>%
data.frame(row.names = 1)
View(e_number_df)
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
str_extract_all("271", boundary("character"))
library(stringr)
str_extract_all("271", boundary("character"))
str_extract_all("271", boundary("character"))[[1]]
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
shiny::runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
library(shiny)
library(dplyr)
library(readxl)
library(stringr)
setwd("C:/Users/james/OneDrive/Documents/Important_Files/Life")
e_number_df = read_xlsx('emans_info.xlsx', sheet = 'e') %>%
data.frame(row.names = 1)
View(e_number_df)
e_number_df = read_xlsx('emans_info.xlsx', sheet = 'e') #%>%
# data.frame(row.names = 1)
View(e_number_df)
e_number_df %>%
filter(set == 'set-1')
## The Solution
e_number_df %>%
filter(set == 'set-1') %>%
select(-set)
## The Solution
e_number_df %>%
filter(set == 'set-1') %>%
select(-set) %>%
unite('Merged', `col-1`:`col-4`,remove =FALSE)
library(tidyverse)
## The Solution
e_number_df %>%
filter(set == 'set-1') %>%
select(-set) %>%
unite('Merged', `col-1`:`col-4`,remove =FALSE)
## The Solution
e_number_df %>%
filter(set == 'set-1') %>%
select(-set) %>%
unite('Merged', `col-1`:`col-4`,remove =FALSE,sep = '')
## The Solution
e_number_df %>%
filter(set == 'set-1') %>%
select(-set) %>%
unite('Merged', `col-1`:`col-4`,remove =FALSE,sep = '') %>%
mutate(Merged = str_remove_all(Merged,'\''))
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
select_set_fun('set-1')
select_set_fun <- function(specified_set) {
## The Solution
value_to_test = e_number_df %>%
filter(set == specified_set) %>%
select(-set) %>%
unite('Merged', `col-1`:`col-4`,remove =FALSE,sep = '') %>%
mutate(Merged = str_remove_all(Merged,'\'')) %>%
pull(Merged)
return(value_to_test)
}
select_set_fun('set-1')
str_extract_all(select_set_fun('set-1'), boundary("character"))
str_extract_all(select_set_fun('set-1'), boundary("character"))[[1]]
str_extract_all(select_set_fun('set-1'), boundary("character"))[[1]] %>%
str_remove('\\.')
## The Solution
reals_solution = str_extract_all(select_set_fun('set-1'), boundary("character"))[[1]] %>%
str_remove('\\.') %>%
stri_remove_empty(())
## The Solution
reals_solution = str_extract_all(select_set_fun('set-1'), boundary("character"))[[1]] %>%
str_remove('\\.') %>%
stri_remove_empty()
## The Solution
reals_solution = str_extract_all(select_set_fun('set-1'), boundary("character"))[[1]] %>%
str_remove('\\.') %>%
str_subset( ".+")
reals_solution
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
shiny::runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
library(shiny)
library(readxl)
library(tidyverse)
setwd("C:/Users/james/OneDrive/Documents/Important_Files/Life")
e_number_df = read_xlsx('emans_info.xlsx', sheet = 'e') #%>%
# data.frame(row.names = 1)
View(e_number_df)
odd_e_number_df = e_number_df %>%
mutate(number = str_remove('set-'))
odd_e_number_df = e_number_df %>%
mutate(number = str_remove(set,'set-'))
View(odd_e_number_df)
odd_e_number_df = e_number_df %>%
mutate(number = as.numeric(str_remove(set,'set-')))
odd_e_number_df = e_number_df %>%
mutate(number = as.numeric(str_remove(set,'set-'))) %>%
filter(number %% 2 == 0 )
View(odd_e_number_df)
odd_e_number_df = e_number_df %>%
mutate(number = as.numeric(str_remove(set,'set-'))) %>%
filter(number %% 2 != 0 )
even_e_number_df = e_number_df  %>%
anti_join(odd_e_number_df)
View(even_e_number_df)
View(odd_e_number_df)
bind_cols(odd_e_number_df,even_e_number_df)%>%
select(-set,-number)
df = bind_cols(odd_e_number_df,even_e_number_df) %>%
select(-set,-number)
df = bind_cols(odd_e_number_df,even_e_number_df) %>%
select(-number)
View(df)
df = bind_cols(odd_e_number_df,even_e_number_df) %>%
select(-number,-contains('set'))
View(df)
colnames(df)
df = bind_cols(odd_e_number_df,even_e_number_df) %>%
select(-number,-contains('set')) %>%
unite('Merged', `col-1...2"`:`col-4...11`,remove =FALSE,sep = '')
df = bind_cols(odd_e_number_df,even_e_number_df) %>%
select(-number,-contains('set')) %>%
unite('Merged', `col-1...2`:`col-4...11`,remove =FALSE, sep = '')
df = bind_cols(odd_e_number_df,even_e_number_df) %>%
select(-number,-contains('set')) %>%
unite('Merged', `col-1...2`:`col-4...11`,remove =TRUE, sep = '')
View(df)
df = bind_cols(odd_e_number_df,even_e_number_df) %>%
select(-number,-contains('set')) %>%
unite('Merged', `col-1...2`:`col-4...11`,remove =TRUE, sep = '') %>%
mutate(Merged = str_remove_all(Merged,'\''))
View(df)
df = bind_cols(odd_e_number_df,even_e_number_df) %>%
select(-number,-contains('set')) %>%
unite('Merged', `col-1...2`:`col-4...11`,remove =TRUE, sep = '') %>%
mutate(Merged = str_remove_all(Merged,'\'')) %>%
mutate(labeled = c(rep('A',5),rep('B',5),rep('C',5) ) )
View(df)
tmp_df = df %>%
filter(labeled == 'A')#input$set_combination)
View(tmp_df)
tmp_df[1,]
tmp_df[1,1]
pull(tmp_df[1,1],Merged)
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
library(shiny)
library(readxl)
library(tidyverse)
setwd("C:/Users/james/OneDrive/Documents/Important_Files/Life")
e_number_df = read_xlsx('emans_info.xlsx', sheet = 'e') #%>%
# data.frame(row.names = 1)
odd_e_number_df = e_number_df %>%
mutate(number = as.numeric(str_remove(set,'set-'))) %>%
filter(number %% 2 != 0 )
even_e_number_df = e_number_df  %>%
anti_join(odd_e_number_df) %>%
select(-set,-number)
df = bind_cols(odd_e_number_df,even_e_number_df) %>%
select(-contains('set')) %>%
unite('Merged', `col-1...2`:`col-4...11`,remove =TRUE, sep = '') %>%
mutate(Merged = str_remove_all(Merged,'\'')) %>%
mutate(labeled = c(rep('A',5),rep('B',5),rep('C',5) ) )
even_e_number_df = e_number_df  %>%
anti_join(odd_e_number_df) %>%
select(-set)
df = bind_cols(odd_e_number_df,even_e_number_df) %>%
select(-contains('set')) %>%
unite('Merged', `col-1...2`:`col-4...11`,remove =TRUE, sep = '') %>%
mutate(Merged = str_remove_all(Merged,'\'')) %>%
mutate(labeled = c(rep('A',5),rep('B',5),rep('C',5) ) )
df = bind_cols(odd_e_number_df,even_e_number_df) %>%
select(-contains('set'))
View(df)
df = bind_cols(odd_e_number_df,even_e_number_df) %>%
select(-contains('set'),-number)
View(df)
df = bind_cols(odd_e_number_df,even_e_number_df) %>%
select(-contains('set'),-number) %>%
unite('Merged', `col-1...2`:`col-4...10`,remove =TRUE, sep = '') %>%
mutate(Merged = str_remove_all(Merged,'\'')) %>%
mutate(labeled = c(rep('A',5),rep('B',5),rep('C',5) ) )
View(df)
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
runApp('01_thoughts_self/numberTracker/memory_numbers_version_1')
shiny::runApp('memory_numbers_version_1')
runApp()
library(rshiny)
## Only run examples in interactive R sessions
if (interactive()) {
ui <- fluidPage(
sliderInput("n", "Number of observations", 2, 1000, 500),
plotOutput("plot")
)
server <- function(input, output) {
# Anything that calls autoInvalidate will automatically invalidate
# every 2 seconds.
autoInvalidate <- reactiveTimer(2000)
observe({
# Invalidate and re-execute this reactive expression every time the
# timer fires.
autoInvalidate()
# Do something each time this is invalidated.
# The isolate() makes this observer _not_ get invalidated and re-executed
# when input$n changes.
print(paste("The value of input$n is", isolate(input$n)))
})
# Generate a new histogram each time the timer fires, but not when
# input$n changes.
output$plot <- renderPlot({
autoInvalidate()
hist(rnorm(isolate(input$n)))
})
}
shinyApp(ui, server)
}
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
library(lubridate)
library(shiny)
ui <- fluidPage(
hr(),
actionButton('start','Start'),
actionButton('stop','Stop'),
actionButton('reset','Reset'),
numericInput('seconds','Seconds:',value=10,min=0,max=99999,step=1),
textOutput('timeleft')
)
server <- function(input, output, session) {
# Initialize the timer, 10 seconds, not active.
timer <- reactiveVal(10)
active <- reactiveVal(FALSE)
# Output the time left.
output$timeleft <- renderText({
paste("Time left: ", seconds_to_period(timer()))
})
# observer that invalidates every second. If timer is active, decrease by one.
observe({
invalidateLater(1000, session)
isolate({
if(active())
{
timer(timer()-1)
if(timer()<1)
{
active(FALSE)
showModal(modalDialog(
title = "Important message",
"Countdown completed!"
))
}
}
})
})
# observers for actionbuttons
observeEvent(input$start, {active(TRUE)})
observeEvent(input$stop, {active(FALSE)})
observeEvent(input$reset, {timer(input$seconds)})
}
shinyApp(ui, server)
runApp('memory_numbers_version_1/test_time_tracker.R')
runApp('memory_numbers_version_1')
runApp()
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('C:/Users/james/OneDrive/Documents/Important_Files/Life/01_thoughts_self/numberTracker/test_timer')
runApp('test_timer')
runApp('test_timer')
runApp('memory_numbers_version_1')
shiny::runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
shiny::runApp('memory_numbers_version_1')
setwd("C:/Users/james/OneDrive/Documents/Important_Files/Life/01_thoughts_self/numberTracker")
shiny::runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
runApp('memory_numbers_version_1')
